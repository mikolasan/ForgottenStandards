apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

version = '1.0'
description = 'imperialrussia-android'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
    compileSdkVersion 33
    defaultConfig {
        applicationId "io.github.mikolasan.imperialrussia"
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 3
        versionName "1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs 'en', 'ru'
    }
    buildTypes {
        debug {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '33.0.0'
    namespace 'io.github.mikolasan.imperialrussia'
}

task runRatioGenerator(type: JavaExec) {
    group = 'kotlinpoet'
    classpath = configurations.runtimeOnly
//    main = 'io.github.mikolasan.ratiogenerator.RatioGeneratorKt'
    // store the output instead of printing to the console:
    standardOutput = new ByteArrayOutputStream()
    // extension method genSource.output() can be used to obtain the output:
    def outputDir = new File("/${buildDir}/generated-sources")
    doLast {
        if(!outputDir.exists()) {
            outputDir.mkdirs()
        }
        def outputFile = new File(outputDir, imperialUnits? imperialUnits : "Output.kt")
        outputFile.text = standardOutput.toString()
    }
}

dependencies {
    implementation project(':convertmeifyoucan')
    implementation project(':ratiogenerator')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // https://developer.android.com/jetpack/androidx/releases/core
    //noinspection GradleDependency
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta3'
    def fragment_version = "1.5.5"
    // Java language implementation
//    implementation "androidx.fragment:fragment:$fragment_version"
    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'io.noties.markwon:core:4.6.2'

    // For @Nullable/@NonNull
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
}
